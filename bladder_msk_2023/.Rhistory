dim(bladder_clin)  # Deve retornar 526 linhas e 29 colunas
# Verifica se o BiocManager está instalado e instala se necessário
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!requireNamespace("cBioPortalData", quietly = TRUE))
BiocManager::install("cBioPortalData")
# Carregamento dos packages
library(cBioPortalData)
# Inicialização do API cBioPortal
cbio <- cBioPortal()
# Obter dados clínicos
bladder_clin <- clinicalData(api = cbio, studyId = "bladder_msk_2023")
bladder_clin
dim(bladder_clin)  # Deve retornar 526 linhas e 29 colunas
View(bladder_clin)
bladder = cBioDataPack("bladder_msk_2023", ask = FALSE)
bladder
bladder
################################################################################
# Lista os nomes dos ensaios disponíveis no pacote dos dados do CBioPortal
names(assays(bladder))
# Summary dos dados
summary(bladder)
dados_cna = assays(bladder)$cna
dados_cna_df = as.data.frame(dados_cna)
# Acessando os dados de cna_hg19 e convertendo para um dataframe
dados_cna_hg19 = assays(bladder)$cna_hg19.seg
dados_cna_hg19_df = as.data.frame(dados_cna_hg19)
# Acessando os dados de mutação e convertendo para um dataframe
dados_mutacao = assays(bladder)$mutations
dados_mutacao_df = as.data.frame(dados_mutacao)
# Verificando a classe e dimensões dos dados de mutação
dim(dados_mutacao_df)
# Verificando a classe e dimensões dos dados de mutação
dim(dados_mutacao_df)
bladder
bladder$mutations
assays(bladder)$mutations
assays(bladder)$meta_cna_hg19_seq
assays(bladder)$meta_cna_hg19_seg
getwd()
setwd("bladder_msk_2023")
getwd()
meta_cna_hg19_seg <- read.delim("meta_cna_hg19_seg.txt")
View(meta_cna_hg19_seg)
meta_study <- read.delim("meta_study.txt")
View(meta_study)
meta_cna_hg19_seg <- read.delim("meta_cna_hg19_seg.txt", sep = ":")
View(meta_cna_hg19_seg)
meta_cna_hg19_seg <- read.delim("meta_cna_hg19_seg.txt", sep = ":")
meta_study <- read.delim("meta_study.txt", sep = ":")
meta_cna <- read.delim("meta_cna.txt", sep = ":")
View(meta_cna)
View(meta_cna_hg19_seg)
meta_study <- read.delim("meta_study.txt", sep = ":", header = FALSE)
View(meta_study)
meta_cna_hg19_seg <- read.delim("meta_cna_hg19_seg.txt", sep = ":", header = FALSE)
meta_study <- read.delim("meta_study.txt", sep = ":", header = FALSE)
meta_cna <- read.delim("meta_cna.txt", sep = ":", header = FALSE)
View(meta_cna)
View(meta_study)
View(dados_mutacao)
meta_study <- read.delim("meta_study.txt", sep = ":", header = FALSE, row.names = 1)
View(meta_study)
View(meta_study)
meta_study <- read.delim("meta_study.txt", sep = ":", header = FALSE, row.names = 1, col.names = "Data")
meta_study <- read.delim("meta_study.txt", sep = ":", header = FALSE, row.names = 1, col.names[2] = "Data")
View(meta_study)
meta_study <- read.delim("meta_study.txt", sep = ":", header = FALSE, row.names = 1, col.names = c("", "Data"))
View(meta_study)
View(meta_cna_hg19_seg)
meta_cna_hg19_seg <- read.delim("meta_cna_hg19_seg.txt", sep = ":", header = FALSE, row.names = 1, col.names = c("", "data"))
View(meta_cna_hg19_seg)
meta_cna <- read.delim("meta_cna.txt", sep = ":", header = FALSE, row.names = 1, col.names = c("", "data"))
View(meta_cna)
View(meta_study)
meta_study[name]
meta_study
meta_study(citation)
meta_cna
meta_cna_hg19_seg
table(meta_study)
for (i in 1:nrow(meta_study)) {
cat("Row:", rownames(meta_study)[i], "\n")
for (j in 1:ncol(meta_study)) {
cat("Column:", colnames(meta_study)[j], "Value:", meta_study[i, j], "\n")
}
cat("\n")
}
meta_study[citation, ]
meta_study[citation]
meta_study[citation, Data]
meta_study[citation, data]
meta_study <- read.delim("meta_study.txt", sep = ":",
header = FALSE,
row.names = 1,
col.names = c("", "data")
)
meta_study
meta_study[citation, data]
meta_study["citation", "data"]
meta_study["citation", "data"] # Citação
View(meta_cna)
View(meta_cna_hg19_seg)
